{"comment": "from scipy.optimize import minimize\n\ndef prob_117(burgers, pizza):\n    \"\"\"\n    Args:\n        burgers: an integer, the number of burgers\n        pizza: an integer, the number of pizza slices\n    Returns:\n        obj: an integer, the objective value (cholesterol intake)\n    \"\"\"\n    fat_burger = 10\n    fat_pizza = 8\n    cal_burger = 300\n    cal_pizza = 250\n    chol_burger = 12\n    chol_pizza = 10\n    \n    # Objective function to minimize cholesterol intake\n    def objective(x):\n        return x[0]*chol_burger + x[1]*chol_pizza\n    \n    # Constraints\n    def constraint1(x):\n        return x[0]*fat_burger + x[1]*fat_pizza - 130\n    \n    def constraint2(x):\n        return x[0]*cal_burger + x[1]*cal_pizza - 3000\n    \n    def constraint3(x):\n        return x[0] - 2*x[1]\n    \n    # Initial guess\n    x0 = [burgers, pizza]\n    \n    # Bounds\n    bounds = ((0, None), (0, None))\n    \n    # Constraints\n    cons = ({'type': 'eq', 'fun': constraint1},\n            {'type': 'eq', 'fun': constraint2},\n            {'type': 'eq', 'fun': constraint3})\n    \n    # Minimize the objective function\n    res = minimize(objective, x0, bounds=bounds, constraints=cons)\n    \n    return res.fun\n\n# Test the function\nprint(prob_117(1, 1))", "expert": "Modeling Knowledge Supplement Expert"}