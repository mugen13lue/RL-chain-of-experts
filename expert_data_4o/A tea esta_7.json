{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_75(traditional_machine, modern_machine):\n    \"\"\"\n    Args:\n        traditional_machine: an integer, represents the number of acres to be used for traditional machine\n        modern_machine: an integer, represents the number of acres to be used for modern machine\n    Returns:\n        obj: an integer, represents the maximum amount of tea leaves that can be picked\n    \"\"\"\n    \n    # Create a new model\n    model = gp.Model(\"Tea Leaves Picking\")\n    \n    # Define decision variables\n    acres_traditional = model.addVar(lb=0, vtype=GRB.INTEGER, name=\"acres_traditional\")\n    acres_modern = model.addVar(lb=0, vtype=GRB.INTEGER, name=\"acres_modern\")\n    \n    # Set objective function\n    model.setObjective(30 * acres_traditional + 40 * acres_modern, sense=GRB.MAXIMIZE)\n    \n    # Add constraints\n    model.addConstr(20 * acres_traditional + 15 * acres_modern <= 9000, \"fuel_constraint\")\n    model.addConstr(10 * acres_traditional + 15 * acres_modern <= 6000, \"waste_constraint\")\n    \n    # Optimize the model\n    model.optimize()\n    \n    # Get the optimal objective value\n    obj = int(model.objVal)\n    \n    return obj\n```", "expert": "Programming Expert"}