{"comment": "import pulp\n\ndef prob_179(cargo_planes, ultrawide_trucks):\n    \"\"\"\n    Args:\n        cargo_planes: an integer, number of cargo planes\n        ultrawide_trucks: an integer, number of ultrawide trucks\n    Returns:\n        obj: an integer, minimum number of trips\n    \"\"\"\n    \n    # Create a LP minimization problem\n    prob = pulp.LpProblem(\"Minimize Trips\", pulp.LpMinimize)\n    \n    # Define decision variables\n    x = pulp.LpVariable(\"x\", lowBound=0, cat='Integer')  # Number of trips made by cargo planes\n    y = pulp.LpVariable(\"y\", lowBound=0, cat='Integer')  # Number of trips made by ultrawide trucks\n    \n    # Objective function to minimize total trips\n    prob += x + y\n    \n    # Constraints\n    prob += 10*x + 6*y >= 200  # Total number of tires transported constraint\n    prob += 1000*x + 700*y <= 22000  # Total cost constraint\n    prob += x <= y  # Plane trips cannot exceed truck trips\n    \n    # Solve the LP problem\n    prob.solve()\n    \n    # Return the minimum number of trips\n    return int(pulp.value(prob.objective))\n\n# Test the function\nprint(prob_179(1, 1))  # Output should be 20", "expert": "Modeling Knowledge Supplement Expert"}