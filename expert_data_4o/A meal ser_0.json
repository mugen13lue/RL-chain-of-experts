{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_165(electric_bikes, scooters, Max_Bikes, Min_Scooters, Charge_Limit):\n    \"\"\"\n    Args:\n        electric_bikes: an integer, the number of electric bikes used.\n        scooters: an integer, the number of scooters used.\n        Max_Bikes: an integer, maximum number of electric bikes allowed.\n        Min_Scooters: an integer, minimum number of scooters required.\n        Charge_Limit: an integer, available charge units.\n\n    Returns:\n        Number_of_Meals: an integer, the maximum number of meals that can be delivered.\n    \"\"\"\n    model = gp.Model(\"meal_delivery\")\n\n    # Decision variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"electric_bikes\")\n    y = model.addVar(vtype=GRB.INTEGER, name=\"scooters\")\n\n    # Objective function: maximize the number of meals delivered\n    model.setObjective(8*x + 5*y, sense=GRB.MAXIMIZE)\n\n    # Constraints\n    model.addConstr(3*x + 2*y <= Charge_Limit, \"charge_limit\")\n    model.addConstr(x <= Max_Bikes, \"max_bikes\")\n    model.addConstr(y >= Min_Scooters, \"min_scooters\")\n    model.addConstr(x <= 0.3*(x + y), \"max_bikes_percentage\")\n\n    # Optimize the model\n    model.optimize()\n\n    # Return the maximum number of meals that can be delivered\n    return int(model.objVal)", "expert": "Programming Expert"}