{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_30(phones, laptops, var1, var2, var3, var4, var5, var6):\n    \"\"\"\n    Args:\n        phones: an integer, representing the number of phones\n        laptops: an integer, representing the number of laptops\n        var1: an integer, representing the labor hours required for phones\n        var2: an integer, representing the labor hours required for laptops\n        var3: an integer, representing the cost per sq. foot for phone production\n        var4: an integer, representing the cost per sq. foot for laptop production\n        var5: an integer, representing the net revenue per sq. foot for phones\n        var6: an integer, representing the net revenue per sq. foot for laptops\n\n    Returns:\n        obj: an integer, the optimal revenue\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"factory_layout\")\n\n    # Define decision variables\n    x1 = model.addVar(vtype=GRB.INTEGER, name=\"phones_space\")\n    x2 = model.addVar(vtype=GRB.INTEGER, name=\"laptops_space\")\n\n    # Set objective function\n    model.setObjective(var5*x1 + var6*x2, sense=GRB.MAXIMIZE)\n\n    # Add constraints\n    model.addConstr(var1*x1 + var2*x2 <= 2000, \"labor_constraint\")\n    model.addConstr(var3*x1 + var4*x2 <= 5000, \"cost_constraint\")\n    model.addConstr(x1 + x2 <= 100, \"space_constraint\")\n\n    # Optimize model\n    model.optimize()\n\n    # Get the optimal revenue\n    obj = model.objVal\n\n    return obj", "expert": "Programming Expert"}