{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_275(chemical_A, chemical_B):\n    \"\"\"\n    Args:\n        chemical_A: an integer representing the amount of chemical A\n        chemical_B: an integer representing the amount of chemical B\n    Returns:\n        obj: an integer representing the total time\n    \"\"\"\n    t_A = 30\n    t_B = 45\n    max_ratio = 1/3\n    min_A = 300\n    min_total = 1500\n\n    # Create a new model\n    model = gp.Model(\"chemical_mixer\")\n\n    # Define decision variables\n    A = model.addVar(lb=min_A, vtype=GRB.CONTINUOUS, name=\"A\")\n    B = model.addVar(lb=0, vtype=GRB.CONTINUOUS, name=\"B\")\n\n    # Set objective function\n    model.setObjective(t_A * A + t_B * B, sense=GRB.MINIMIZE)\n\n    # Add constraints\n    model.addConstr(A + B >= min_total, \"min_total_constraint\")\n    model.addConstr(A <= max_ratio * B, \"max_ratio_constraint\")\n\n    # Optimize model\n    model.optimize()\n\n    # Get the optimal objective value\n    obj = model.objVal\n\n    return obj\n```", "expert": "Modeling Knowledge Supplement Expert"}