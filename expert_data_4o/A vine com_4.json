{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_98(vintage_bottles, regular_bottles):\n    \"\"\"\n    Args:\n        vintage_bottles: an integer (number of vintage bottles)\n        regular_bottles: an integer (number of regular bottles)\n    Returns:\n        obj: an integer (maximum total number of bottles produced)\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"vine_production\")\n\n    # Variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"vintage_bottles\")\n    y = model.addVar(vtype=GRB.INTEGER, name=\"regular_bottles\")\n\n    # Constants\n    V_vintage = 500\n    V_regular = 750\n    V_total = 100000\n    min_vintage = 10\n    min_regular = 4 * min_vintage\n\n    # Objective: maximize total number of bottles produced\n    model.setObjective(x + y, sense=GRB.MAXIMIZE)\n\n    # Constraints\n    model.addConstr(V_vintage * x + V_regular * y <= V_total, \"total_volume_constraint\")\n    model.addConstr(y >= 4 * x, \"regular_vintage_ratio_constraint\")\n    model.addConstr(x >= min_vintage, \"min_vintage_constraint\")\n\n    # Optimize the model\n    model.optimize()\n\n    # Get the optimal objective value\n    obj = model.objVal\n\n    return obj\n```", "expert": "Programming Expert"}