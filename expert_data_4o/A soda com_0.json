{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_250(cans, glass_bottles, required_capacity, constraint2, constraint3):\n    \"\"\"\n    Args:\n        cans: an integer, representing the number of cans produced\n        glass_bottles: an integer, representing the number of glass bottles produced\n        required_capacity: an integer, representing the minimum required capacity in ml\n        constraint2: an integer, representing the multiplier for cans compared to glass bottles\n        constraint3: an integer, representing the minimum number of glass bottles required\n    Returns:\n        obj: an integer, representing the objective value (maximized number of units)\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"soda_production\")\n\n    # Define decision variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"cans\")\n    y = model.addVar(vtype=GRB.INTEGER, name=\"glass_bottles\")\n\n    # Set objective function: maximize the total number of units produced\n    model.setObjective(x + y, sense=GRB.MAXIMIZE)\n\n    # Add constraints\n    model.addConstr(250*x + 1000*y >= required_capacity, \"capacity_constraint\")\n    model.addConstr(x >= constraint2*y, \"cans_constraint\")\n    model.addConstr(y >= constraint3, \"glass_bottles_constraint\")\n\n    # Optimize the model\n    model.optimize()\n\n    # Get the objective value\n    obj = model.objVal\n\n    return obj", "expert": "Programming Expert"}