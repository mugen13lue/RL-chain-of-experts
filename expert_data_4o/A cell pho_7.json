{"comment": "```python\nfrom scipy.optimize import linprog\n\ndef prob_62(rural, urban, _100, _8, _200, _20, _260, _3000):\n    \"\"\"\n    Args:\n        rural: an integer, number of rural factories\n        urban: an integer, number of urban factories\n        _100: an integer, number of phones that a rural factory can make per day\n        _8: an integer, number of managers required for a rural factory\n        _200: an integer, number of phones that an urban factory can make per day\n        _20: an integer, number of managers required for an urban factory\n        _260: an integer, available number of managers\n        _3000: an integer, minimum number of phones required per day\n    Returns:\n        number_of_factories: an integer, total number of factories\n    \"\"\"\n    c = [1, 1]  # Coefficients of the objective function to minimize Z = x + y\n    A = [[-8, -20], [100, 200]]  # Coefficients of the inequality constraints\n    b = [-260, 3000]  # Right-hand side of the inequality constraints\n    bounds = [(0, None), (0, None)]  # Non-negativity constraints for x and y\n\n    res = linprog(c, A_ub=A, b_ub=b, bounds=bounds, method='highs')\n    return res.x[0], res.x[1]\n\n# Example usage\nrural, urban = prob_62(0, 0, 100, 8, 200, 20, 260, 3000)\nprint(f\"Number of rural factories: {int(rural)}\")\nprint(f\"Number of urban factories: {int(urban)}\")\n```", "expert": "Modeling Knowledge Supplement Expert"}