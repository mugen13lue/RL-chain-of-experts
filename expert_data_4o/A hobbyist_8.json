{"comment": "```python\nfrom gurobipy import *\n\ndef prob_27(model_trains, planes, wood_train, paint_train, wood_plane, paint_plane, wood_available, paint_available):\n    \"\"\"\n    Args:\n        model_trains: an integer, number of model trains\n        planes: an integer, number of planes\n        wood_train: an integer, units of wood required for a model train\n        paint_train: an integer, units of paint required for a model train\n        wood_plane: an integer, units of wood required for a plane\n        paint_plane: an integer, units of paint required for a plane\n        wood_available: an integer, available units of wood\n        paint_available: an integer, available units of paint\n    Returns:\n        obj: an integer, maximum profit\n    \"\"\"\n    m = Model(\"Model_Trains_and_Planes\")\n\n    # Variables\n    x = m.addVar(vtype=GRB.INTEGER, name=\"model_trains\")\n    y = m.addVar(vtype=GRB.INTEGER, name=\"planes\")\n\n    # Objective Function\n    m.setObjective(8*x + 10*y, sense=GRB.MAXIMIZE)\n\n    # Constraints\n    m.addConstr(wood_train*x + wood_plane*y <= wood_available, \"wood_constraint\")\n    m.addConstr(paint_train*x + paint_plane*y <= paint_available, \"paint_constraint\")\n\n    # Optimize model\n    m.optimize()\n\n    # Get the maximum profit\n    obj = m.objVal\n\n    return obj\n```", "expert": "Programming Expert"}