{"comment": "```python\nfrom scipy.optimize import linprog\n\ndef prob_27(model_trains, planes, wood_train, paint_train, wood_plane, paint_plane, wood_available, paint_available):\n    \"\"\"\n    Args:\n        model_trains: an integer, number of model trains\n        planes: an integer, number of planes\n        wood_train: an integer, units of wood required for a model train\n        paint_train: an integer, units of paint required for a model train\n        wood_plane: an integer, units of wood required for a plane\n        paint_plane: an integer, units of paint required for a plane\n        wood_available: an integer, available units of wood\n        paint_available: an integer, available units of paint\n    Returns:\n        obj: an integer, maximum profit\n    \"\"\"\n    c = [-8, -10]  # Coefficients of the objective function to minimize (-8x - 10y)\n    A = [[wood_train, wood_plane], [paint_train, paint_plane]]  # Coefficients of the constraints for wood and paint\n    b = [wood_available, paint_available]  # Available units of wood and paint\n\n    res = linprog(c, A_ub=A, b_ub=b, bounds=(0, None))\n\n    return round(-res.fun)  # Return the maximum profit\n```", "expert": "Programming Expert"}