{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_72(small_branch, large_branch, constraint1, constraint2):\n    \"\"\"\n    Args:\n        small_branch: an integer, the number of small branches\n        large_branch: an integer, the number of large branches\n        constraint1: an integer, the value of the first constraint\n        constraint2: an integer, the value of the second constraint\n    Returns:\n        obj_value: an integer, the objective value of the problem\n    \"\"\"\n    \n    # Create a new model\n    model = gp.Model(\"branch_optimization\")\n    \n    # Define decision variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"x\")  # Number of small branches\n    y = model.addVar(vtype=GRB.INTEGER, name=\"y\")  # Number of large branches\n    \n    # Set objective function: minimize the total number of branches needed\n    model.setObjective(x + y, sense=GRB.MINIMIZE)\n    \n    # Add constraints\n    model.addConstr(10*x + 15*y <= 200, \"constraint1\")  # Total number of bank tellers available\n    model.addConstr(50*x + 100*y >= 1200, \"constraint2\")  # Total number of customers that need to be served per day\n    \n    # Optimize the model\n    model.optimize()\n    \n    # Get the objective value\n    obj_value = model.objVal\n    \n    return obj_value\n```", "expert": "Modeling Knowledge Supplement Expert"}