{"comment": "```python\nfrom scipy.optimize import linprog\n\ndef prob_71(top_loading_model, front_loading_model, var1, var2, var3, var4):\n    \"\"\"\n    Args:\n        top_loading_model: an integer, representing the number of top-loading machines\n        front_loading_model: an integer, representing the number of front-loading machines\n        var1: an integer, representing the number of items the top-loading model can wash per day\n        var2: an integer, representing the number of items the front-loading model can wash per day\n        var3: an integer, representing the amount of energy consumed by the top-loading model per day\n        var4: an integer, representing the amount of energy consumed by the front-loading model per day\n    Returns:\n        obj: an integer, representing the minimum total number of washing machines\n    \"\"\"\n    \n    c = [1, 1]  # Coefficients for the objective function to minimize x + y\n    \n    A = [\n        [-var1, -var2],  # Items Constraint: 50x + 75y >= 5000\n        [var3, var4],    # Energy Constraint: 85x + 100y <= 7000\n        [-1, -1],        # Top-loading Limit: x <= 0.4(x+y)\n        [0, 1]           # Front-loading Minimum: y >= 10\n    ]\n    \n    b = [-5000, 7000, 0, 10]  # Right-hand side values for the constraints\n    \n    bounds = [(0, None), (0, None)]  # Non-negativity constraints for x and y\n    \n    res = linprog(c, A_ub=A, b_ub=b, bounds=bounds, method='highs')\n    \n    return res.fun\n```", "expert": "Programming Expert"}