{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_103(small_bone, large_bone, medication_constraint, small_bone_percentage_constraint, minimum_large_bone_constraint):\n    \"\"\"\n    Args:\n        small_bone: an integer.\n        large_bone: an integer.\n        medication_constraint: an integer.\n        small_bone_percentage_constraint: an integer.\n        minimum_large_bone_constraint: an integer.\n    Returns:\n        amount_of_meat: an integer.\n    \"\"\"\n    model = gp.Model(\"bone_production\")\n\n    # Variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"small_bones\")\n    y = model.addVar(vtype=GRB.INTEGER, name=\"large_bones\")\n    M = model.addVar(vtype=GRB.INTEGER, name=\"meat\")\n\n    # Constraints\n    model.addConstr(10*x + 15*y <= medication_constraint, \"tooth_medication\")\n    model.addConstr(12*x <= M, \"meat_small_bones\")\n    model.addConstr(15*y <= M, \"meat_large_bones\")\n    model.addConstr(x >= 0.5*(x+y), \"min_small_bones\")\n    model.addConstr(y >= minimum_large_bone_constraint, \"min_large_bones\")\n\n    # Objective\n    model.setObjective(M, GRB.MINIMIZE)\n\n    model.optimize()\n\n    amount_of_meat = model.objVal\n\n    return amount_of_meat\n```", "expert": "Modeling Knowledge Supplement Expert"}