{"comment": "```python\nfrom scipy.optimize import linprog\n\ndef prob_14(long, short_cables, constraint1, constraint2, constraint3):\n    \"\"\"\n    Args:\n        long: an integer, the number of long cables\n        short_cables: an integer, the number of short cables\n        constraint1: an integer, the value of the first constraint\n        constraint2: an integer, the value of the second constraint\n        constraint3: an integer, the value of the third constraint\n\n    Returns:\n        obj: an integer, the objective value\n    \"\"\"\n    \n    # Coefficients of the objective function to maximize profit\n    c = [-12, -5]  # Coefficients for x (long cables) and y (short cables)\n\n    # Coefficients of the inequality constraints\n    A = [[10, 7], [-5, 1], [-1, 0], [0, -1]]  # Coefficients for the constraints\n    b = [constraint1, constraint2, -constraint3, 0]  # RHS of the constraints\n\n    # Bounds for the variables\n    x_bounds = (10, None)  # At least 10 long cables\n    y_bounds = (0, None)  # Non-negativity constraint for short cables\n\n    # Solve the linear programming problem\n    res = linprog(c, A_ub=A, b_ub=b, bounds=[x_bounds, y_bounds], method='highs')\n\n    return -res.fun  # Return the negative of the objective value as linprog minimizes by default\n```", "expert": "Programming Expert"}