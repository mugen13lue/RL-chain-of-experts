{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_212(supplement_A, supplement_B, constraint1, constraint2, cost_per_supplement_A, cost_per_supplement_B):\n    \"\"\"\n    Args:\n        supplement_A: an integer, the quantity of supplement A\n        supplement_B: an integer, the quantity of supplement B\n        constraint1: an integer, the value of the first constraint\n        constraint2: an integer, the value of the second constraint\n        cost_per_supplement_A: an integer, the cost per pill of supplement A\n        cost_per_supplement_B: an integer, the cost per pill of supplement B\n    Returns:\n        costs: an integer, the objective value (minimized costs)\n    \"\"\"\n    \n    # Create a new model\n    model = gp.Model(\"supplement_problem\")\n    \n    # Define decision variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"x\")  # Number of pills of supplement A\n    y = model.addVar(vtype=GRB.INTEGER, name=\"y\")  # Number of pills of supplement B\n    \n    # Set objective function\n    model.setObjective(cost_per_supplement_A * x + cost_per_supplement_B * y, GRB.MINIMIZE)\n    \n    # Add constraints\n    model.addConstr(5*x + 4*y >= constraint1, \"Iron_constraint\")\n    model.addConstr(10*x + 15*y >= constraint2, \"Calcium_constraint\")\n    \n    # Optimize the model\n    model.optimize()\n    \n    # Get the minimized costs\n    costs = model.objVal\n    \n    return costs", "expert": "Programming Expert"}