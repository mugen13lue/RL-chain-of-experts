{"comment": "```python\nfrom scipy.optimize import linprog\n\ndef prob_68(kids_size_bottle_capacity, adult_size_bottle_capacity, ratio, available_cough_syrup):\n    \"\"\"\n    Args:\n        kids_size_bottle_capacity: an integer, the capacity of kids size bottle\n        adult_size_bottle_capacity: an integer, the capacity of adult size bottle\n        ratio: an integer, the ratio of adult size bottle to kids size bottle\n        available_cough_syrup: an integer, the total amount of cough syrup available\n    Returns:\n        number_of_bottles: an integer, the maximum total number of bottles that can be produced\n    \"\"\"\n    c = [-1, -1]  # Coefficients of the objective function to maximize x + y\n    A = [[0, 0], [kids_size_bottle_capacity, adult_size_bottle_capacity], [-ratio, 1]]  # Coefficients of the inequality constraints\n    b = [0, available_cough_syrup, 0]  # Right-hand side of the inequality constraints\n    bounds = [(50, None), (0, None)]  # Bounds for the decision variables x and y\n\n    res = linprog(c, A_ub=A, b_ub=b, bounds=bounds, method='highs')\n    number_of_bottles = res.fun * -1  # Maximum total number of bottles\n\n    return int(number_of_bottles)\n```", "expert": "Programming Expert"}