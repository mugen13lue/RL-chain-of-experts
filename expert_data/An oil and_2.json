{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_233(high_volume, low_volume):\n    \"\"\"\n    Args:\n        high_volume: an integer, number of high-volume pipes\n        low_volume: an integer, number of low-volume pipes\n    Returns:\n        obj: an integer, objective value\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"pipe_optimization\")\n\n    # Define decision variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"x\")  # number of high-volume pipes\n    y = model.addVar(vtype=GRB.INTEGER, name=\"y\")  # number of low-volume pipes\n\n    # Set objective function: minimize total number of pipes\n    model.setObjective(x + y, sense=GRB.MINIMIZE)\n\n    # Add constraints\n    model.addConstr(10000*x + 5000*y >= 150000, \"Demand_Constraint\")\n    model.addConstr(12*x + 5*y <= 160, \"Technician_Constraint\")\n    model.addConstr(x <= 0.35*(x+y), \"High-Volume_Pipe_Limit\")\n    model.addConstr(y >= 8, \"Low-Volume_Pipe_Minimum\")\n\n    # Optimize the model\n    model.optimize()\n\n    # Get the objective value\n    obj = model.objVal\n\n    return obj", "expert": "Programming Expert"}