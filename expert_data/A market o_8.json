{"comment": "```python\nfrom scipy.optimize import linprog\n\ndef prob_247(small_packets, jugs, _1000, _1250, three_times, _35, _65000):\n    \"\"\"\n    Solves the optimization problem of maximizing the total number of units that can be sold to customers.\n\n    Args:\n        small_packets: an integer, number of sets of small packets\n        jugs: an integer, number of jugs\n        _1000: an integer, capacity of small packets in ml\n        _1250: an integer, capacity of jugs in ml\n        three_times: a string, indicating the relationship between jugs and small packets\n        _35: an integer, minimum number of small packets to be filled\n        _65000: an integer, total amount of jam available in ml\n\n    Returns:\n        total_number_of_units: an integer, maximum total number of units that can be sold\n    \"\"\"\n    c = [-1, -1]  # Coefficients for the objective function to maximize Z = x + y\n    A = [[-1000, -1250], [0, -3], [1, 0]]  # Coefficients for the constraints\n    b = [-_65000, 0, _35]  # Right-hand side of the constraints\n\n    res = linprog(c, A_ub=A, b_ub=b, method='highs')\n    total_number_of_units = -res.fun  # Maximum total number of units that can be sold\n\n    return total_number_of_units\n```", "expert": "Programming Expert"}