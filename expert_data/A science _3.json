{"comment": "Here is the Python code that implements the optimization model for the given problem:\n\n```python\nfrom scipy.optimize import linprog\n\ndef prob_112(demonstration_1, demonstration_2, _10, _20, _25, _12, _15, _18, _5, _3, _120, _100, _50):\n    c = [-25, -18]  # Coefficients of the objective function to be minimized\n\n    A = [[10, 12], [20, 15], [5, 3]]  # Coefficients of the left-hand side of constraints\n    b = [120, 100, 50]  # Right-hand side of constraints\n\n    bounds = [(0, None), (0, None)]  # Bounds for variables x and y\n\n    res = linprog(c, A_ub=A, b_ub=b, bounds=bounds, method='highs')\n\n    return -res.fun  # Return the negative of the optimized objective value since linprog minimizes by default\n\n# Example usage\nprint(prob_112(0, 0, 10, 20, 25, 12, 15, 18, 5, 3, 120, 100, 50))\n```\n\nThis code uses the `linprog` function from the `scipy.optimize` module to solve the linear programming problem defined by the objective function, constraints, and variable bounds. The function returns the maximum amount of minty foam that can be produced given the constraints and the number of each demonstration type.", "expert": "Modeling Knowledge Supplement Expert"}