{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_285(wide_trail, narrow_trail):\n    \"\"\"\n    Args:\n        wide_trail: an integer, the number of wide trails\n        narrow_trail: an integer, the number of narrow trails\n    Returns:\n        obj: an integer, the total amount of garbage produced\n    \"\"\"\n    obj = 6 * wide_trail + 3 * narrow_trail\n    return obj\n\ndef solve_park_trails():\n    model = gp.Model(\"park_trails\")\n\n    # Variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"x\")  # number of wide trails\n    y = model.addVar(vtype=GRB.INTEGER, name=\"y\")  # number of narrow trails\n\n    # Constraints\n    model.addConstr(x <= 3, \"wide_trail_limit\")\n    model.addConstr(x + y <= 225, \"total_visitors_limit\")\n\n    # Objective\n    model.setObjective(6 * x + 3 * y, GRB.MINIMIZE)\n\n    # Solve\n    model.optimize()\n\n    # Get the optimal solution\n    wide_trail = round(x.x)\n    narrow_trail = round(y.x)\n\n    return wide_trail, narrow_trail\n\n# Get the optimal solution\nwide_trail, narrow_trail = solve_park_trails()\ntotal_garbage = prob_285(wide_trail, narrow_trail)\n\nprint(\"Number of wide trails:\", wide_trail)\nprint(\"Number of narrow trails:\", narrow_trail)\nprint(\"Total amount of garbage produced:\", total_garbage)\n```", "expert": "Programming Expert"}