{"comment": "def prob_20(banana_haters_package, combo_package):\n    \"\"\"\n    Args:\n        banana_haters_package: an integer representing the quantity of banana-haters packages\n        combo_package: an integer representing the quantity of combo packages\n    Returns:\n        obj: an integer representing the maximum net profit\n    \"\"\"\n    \n    # Objective function: maximize profit (6 euros for banana-haters package and 7 euros for combo package)\n    obj = 6 * banana_haters_package + 7 * combo_package\n    \n    # Constraints\n    apples_constraint = 6 * banana_haters_package + 5 * combo_package <= 10\n    bananas_constraint = 30 * banana_haters_package + 6 * combo_package <= 20\n    grapes_constraint = 30 * banana_haters_package + 20 * combo_package <= 80\n    \n    # Non-negative constraint\n    non_negative_constraint = banana_haters_package >= 0 and combo_package >= 0\n    \n    # Check if all constraints are satisfied\n    if apples_constraint and bananas_constraint and grapes_constraint and non_negative_constraint:\n        return obj\n    else:\n        return -1  # Return -1 if constraints are not satisfied\n\n# Test the function with an example\nprint(prob_20(1, 1))  # Output: 13 (maximum profit for 1 banana-haters package and 1 combo package)", "expert": "Modeling Knowledge Supplement Expert"}