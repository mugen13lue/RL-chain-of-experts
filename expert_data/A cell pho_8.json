{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_62(rural, urban, _100, _8, _200, _20, _260, _3000):\n    \"\"\"\n    Args:\n        rural: an integer, number of rural factories\n        urban: an integer, number of urban factories\n        _100: an integer, number of phones that a rural factory can make per day\n        _8: an integer, number of managers required for a rural factory\n        _200: an integer, number of phones that an urban factory can make per day\n        _20: an integer, number of managers required for an urban factory\n        _260: an integer, available number of managers\n        _3000: an integer, minimum number of phones required per day\n    Returns:\n        number_of_factories: an integer, total number of factories\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"factories\")\n\n    # Define decision variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"x\")  # number of rural factories\n    y = model.addVar(vtype=GRB.INTEGER, name=\"y\")  # number of urban factories\n\n    # Set objective function\n    model.setObjective(x + y, sense=GRB.MINIMIZE)\n\n    # Add constraints\n    model.addConstr(8*x + 20*y <= 260, \"managers_constraint\")\n    model.addConstr(100*x + 200*y >= 3000, \"phones_constraint\")\n\n    # Optimize model\n    model.optimize()\n\n    # Get the optimal solution\n    number_of_factories = model.objVal\n\n    return number_of_factories\n```", "expert": "Programming Expert"}