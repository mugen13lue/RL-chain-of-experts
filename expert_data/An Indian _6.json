{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_89(goat, chicken, goat_meat, goat_base, chicken_meat, chicken_base):\n    \"\"\"\n    Args:\n        goat: an integer, number of goat curry bowls\n        chicken: an integer, number of chicken curry bowls\n        goat_meat: an integer, units of goat meat required per bowl of goat curry\n        goat_base: an integer, units of curry base required per bowl of goat curry\n        chicken_meat: an integer, units of chicken meat required per bowl of chicken curry\n        chicken_base: an integer, units of curry base required per bowl of chicken curry\n    Returns:\n        obj: an integer, total amount of curry base used\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"curry_optimization\")\n\n    # Define decision variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"x\")  # Number of bowls of goat curry\n    y = model.addVar(vtype=GRB.INTEGER, name=\"y\")  # Number of bowls of chicken curry\n\n    # Set objective function\n    model.setObjective(6*x + 5*y, sense=GRB.MINIMIZE)\n\n    # Add constraints\n    model.addConstr(3*x + 5*y <= goat_meat, \"goat_meat_constraint\")\n    model.addConstr(6*x + 5*y <= chicken_meat, \"chicken_meat_constraint\")\n    model.addConstr(y >= 0.25*(x+y), \"chicken_percentage_constraint\")\n    model.addConstr(x >= y, \"goat_greater_than_chicken_constraint\")\n    model.addConstr(x >= 0, \"non_negativity_x_constraint\")\n    model.addConstr(y >= 0, \"non_negativity_y_constraint\")\n\n    # Optimize the model\n    model.optimize()\n\n    # Get the total amount of curry base used\n    obj = model.objVal\n\n    return obj\n```", "expert": "Programming Expert"}