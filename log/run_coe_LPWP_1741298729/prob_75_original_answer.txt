```python
from scipy.optimize import linprog

def prob_75():
    """
    Returns:
        obj: an integer, represents the maximum amount of tea leaves that can be picked
    """
    c = [-30, -40]  # Coefficients of the objective function to maximize 30x + 40y

    A = [[30, 40], [10, 15], [20, 15]]  # Coefficients of the constraints
    b = [500, 6000, 9000]  # Right-hand side of the constraints

    bounds = [(0, None), (0, None)]  # Bounds for x and y (non-negativity constraints)

    res = linprog(c, A_ub=A, b_ub=b, bounds=bounds, method='highs')

    return int(-res.fun)  # Return the maximum amount of tea leaves that can be picked
```
This code incorporates the insights provided by the experts in modeling, parameter extraction, terminology interpretation, and programming. It formulates the linear programming problem to maximize the amount of tea leaves that can be picked using the traditional and modern machines on the tea estate. The function `prob_75` returns the maximum amount of tea leaves that can be picked based on the constraints and objective function defined.