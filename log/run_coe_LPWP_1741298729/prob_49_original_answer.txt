```python
import gurobipy as gp
from gurobipy import GRB

def prob_49():
    """
    Returns:
        obj: an integer, represents the objective value (revenue) to maximize
    """
    # Create a new model
    m = gp.Model("farm_optimization")
    
    # Decision variables
    x = m.addVar(lb=0, vtype=GRB.INTEGER, name="turnips")
    y = m.addVar(lb=0, vtype=GRB.INTEGER, name="pumpkins")
    
    # Set objective
    m.setObjective(300*x + 450*y, sense=GRB.MAXIMIZE)
    
    # Add constraints
    m.addConstr(50*x + 90*y <= 40000, "watering_constraint")
    m.addConstr(80*x + 50*y <= 34000, "pesticide_constraint")
    
    # Optimize model
    m.optimize()
    
    # Get the objective value
    obj = m.objVal
    
    return obj
```
The final code optimizes the revenue generated by growing turnips and pumpkins on a farm with constraints on watering and pesticide usage. The decision variables are defined as integers, and the objective is to maximize revenue. The constraints are added to ensure the farmer stays within the available resources. The code follows the guidelines provided by the experts and effectively solves the optimization problem using Gurobi.