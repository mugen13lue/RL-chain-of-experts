```python
import gurobipy as gp
from gurobipy import GRB

def prob_154(small_teams, large_teams):
    """
    Args:
        small_teams: an integer
        large_teams: an integer
    Returns:
        obj: an integer, the amount of lawn that can be mowed
    """
    # Create a new model
    model = gp.Model("lawn_mowing")

    # Define decision variables
    x = model.addVar(vtype=GRB.INTEGER, name="small_teams")
    y = model.addVar(vtype=GRB.INTEGER, name="large_teams")

    # Set objective function
    model.setObjective(50*x + 80*y, sense=GRB.MAXIMIZE)

    # Add constraints
    model.addConstr(3*x + 5*y <= 150, "employees_constraint")
    model.addConstr(x >= 3*y, "small_teams_constraint")
    model.addConstr(y >= 6, "minimum_large_teams_constraint")
    model.addConstr(x >= 10, "minimum_small_teams_constraint")

    # Optimize model
    model.optimize()

    # Get the optimal objective value
    obj = model.objVal

    return obj
```
This code defines a Gurobi optimization model for the lawn mowing service problem, with decision variables, objective function, and constraints set up according to the problem requirements. The function `prob_154` takes the number of small teams and large teams as input and returns the optimal amount of lawn that can be mowed. Make sure to have the Gurobi package installed to run this code successfully.