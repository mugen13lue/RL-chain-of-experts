```python
from scipy.optimize import linprog

def prob_80(regular, emergency_fire):
    """
    Args:
        regular: an integer, representing the number of regular fire fighters.
        emergency_fire: an integer, representing the number of emergency fire fighters.
    
    Returns:
        obj: an integer, representing the minimum total number of fire fighters.
    """
    
    c = [1, 1]  # Coefficients of the objective function to minimize Z = x + y
    
    A = [[-10, -6], [300, 100]]  # Coefficients of the inequality constraints
    b = [-300, 7000]  # Right-hand side of the inequality constraints
    
    bounds = [(0, None), (0, None)]  # Bounds for x and y
    
    res = linprog(c, A_ub=A, b_ub=b, bounds=bounds, method='highs')
    
    return int(res.fun)  # Minimum total number of fire fighters
```
This code implements a linear programming model to solve the problem of hiring regular and emergency firefighters to minimize the total number of firefighters while meeting the constraints of firefighting hours and budget. The function `prob_80(regular, emergency_fire)` takes the number of regular and emergency firefighters as input and returns the minimum total number of firefighters to be hired.