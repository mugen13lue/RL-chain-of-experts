```python
import gurobipy as gp
from gurobipy import GRB

def prob_80(regular, emergency_fire):
    """
    Args:
        regular: an integer, representing the number of regular fire fighters.
        emergency_fire: an integer, representing the number of emergency fire fighters.
    
    Returns:
        obj: an integer, representing the minimum total number of fire fighters.
    """
    model = gp.Model("fire_fighters")

    # Variables
    x = model.addVar(vtype=GRB.INTEGER, name="regular_fire_fighters")
    y = model.addVar(vtype=GRB.INTEGER, name="emergency_fire_fighters")

    # Constraints
    model.addConstr(10*x + 6*y >= 300, "total_hours_constraint")
    model.addConstr(300*x + 100*y <= 7000, "budget_constraint")

    # Objective
    model.setObjective(x + y, GRB.MINIMIZE)

    # Optimize model
    model.optimize()

    return int(model.objVal)
```
The final code takes into account the insights provided by various experts, including the modeling constraints, objective function, and variable definitions. It uses the Gurobi optimization package to solve the problem of minimizing the total number of firefighters while meeting the required hours and budget constraints.