{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_119(electronic_thermometer, regular_thermometer, electronic_constraint, regular_constraint, time_constraint):\n    \"\"\"\n    Args:\n        electronic_thermometer: an integer representing the number of patients checked with the electronic thermometer\n        regular_thermometer: an integer representing the number of patients checked with the regular thermometer\n        electronic_constraint: an integer representing the required number of patients checked with the electronic thermometer\n        regular_constraint: an integer representing the required number of patients checked with the regular thermometer\n        time_constraint: an integer representing the maximum time the office is open\n    Returns:\n        number_of_patients: an integer representing the maximum number of patients whose temperature can be taken\n    \"\"\"\n    model = gp.Model(\"patients_temperature\")\n\n    # Variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"x\")\n    y = model.addVar(vtype=GRB.INTEGER, name=\"y\")\n\n    # Constraints\n    model.addConstr(x >= 2*y)\n    model.addConstr(y >= regular_constraint)\n    model.addConstr(3*x + 2*y <= time_constraint)\n\n    # Objective\n    model.setObjective(x + y, sense=GRB.MAXIMIZE)\n\n    # Optimize the model\n    model.optimize()\n\n    number_of_patients = int(model.objVal)\n\n    return number_of_patients", "expert": "Programming Expert"}