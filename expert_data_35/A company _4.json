{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_16(z_tube, soorchle, wassa):\n    \"\"\"\n    Args:\n        z_tube: an integer representing the number of advertisements on z-tube\n        soorchle: an integer representing the number of advertisements on soorchle\n        wassa: an integer representing the number of advertisements on wassa\n\n    Returns:\n        obj: an integer representing the maximized total audience\n    \"\"\"\n    \n    # Create a new model\n    model = gp.Model(\"advertisement_optimization\")\n    \n    # Define decision variables\n    x = model.addVar(vtype=GRB.INTEGER, name=\"x\")  # Number of ads on z-tube\n    y = model.addVar(vtype=GRB.INTEGER, name=\"y\")  # Number of ads on soorchle\n    z = model.addVar(vtype=GRB.INTEGER, name=\"z\")  # Number of ads on wassa\n    \n    # Set objective function: maximize total audience\n    model.setObjective(400000*x + 5000*y + 3000*z, sense=GRB.MAXIMIZE)\n    \n    # Add constraints\n    model.addConstr(1000*x + 200*y + 100*z <= 10000, \"budget_constraint\")\n    model.addConstr(x >= 0.05*(x + y + z), \"viewer_constraint_z_tube\")\n    model.addConstr(z <= 0.33*(x + y + z), \"viewer_constraint_wassa\")\n    model.addConstr(y <= 15, \"limit_on_soorchle_ads\")\n    \n    # Optimize the model\n    model.optimize()\n    \n    # Get the maximized total audience\n    obj = int(model.objVal)\n    \n    return obj\n```", "expert": "Modeling Knowledge Supplement Expert"}