{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_30(phones, laptops, var1, var2, var3, var4, var5, var6):\n    \"\"\"\n    Args:\n        phones: an integer, representing the number of phones\n        laptops: an integer, representing the number of laptops\n        var1: an integer, representing the labor hours required for phones\n        var2: an integer, representing the labor hours required for laptops\n        var3: an integer, representing the cost per sq. foot for phone production\n        var4: an integer, representing the cost per sq. foot for laptop production\n        var5: an integer, representing the net revenue per sq. foot for phones\n        var6: an integer, representing the net revenue per sq. foot for laptops\n\n    Returns:\n        obj: an integer, the optimal revenue\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"factory_layout\")\n\n    # Define decision variables\n    x = model.addVar(lb=0, vtype=GRB.CONTINUOUS, name=\"x\")  # sq. feet allocated for phone production\n    y = model.addVar(lb=0, vtype=GRB.CONTINUOUS, name=\"y\")  # sq. feet allocated for laptop production\n\n    # Set objective function\n    model.setObjective(var5*x + var6*y, sense=GRB.MAXIMIZE)\n\n    # Add constraints\n    model.addConstr(x + y <= 100, \"space_constraint\")\n    model.addConstr(var1*x + var2*y <= 2000, \"labor_constraint\")\n    model.addConstr(var3*x + var4*y <= 5000, \"budget_constraint\")\n\n    # Optimize the model\n    model.optimize()\n\n    # Get the optimal revenue\n    obj = model.objVal\n\n    return obj\n```", "expert": "Modeling Knowledge Supplement Expert"}