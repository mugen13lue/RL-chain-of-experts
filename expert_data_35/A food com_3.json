{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_223(Pi_TV, Beta_Video, Gamma_Live):\n    \"\"\"\n    Args:\n        Pi_TV: an integer, representing the number of commercials to run on Pi TV\n        Beta_Video: an integer, representing the number of commercials to run on Beta Video\n        Gamma_Live: an integer, representing the number of commercials to run on Gamma Live\n    Returns:\n        obj: an integer, representing the maximum audience\n    \"\"\"\n    m = gp.Model(\"commercial_optimization\")\n\n    # Decision variables\n    x1 = m.addVar(vtype=GRB.INTEGER, name=\"x1\")\n    x2 = m.addVar(vtype=GRB.INTEGER, name=\"x2\")\n    x3 = m.addVar(vtype=GRB.INTEGER, name=\"x3\")\n\n    # Constraints\n    m.addConstr(x1 + x2 + x3 <= 8, \"beta_video_limit\")\n    m.addConstr(x3 <= (1/3)*(x1 + x2 + x3), \"gamma_live_limit\")\n    m.addConstr(x1 >= 0.2*(x1 + x2 + x3), \"pi_tv_min\")\n    m.addConstr(1200*x1 + 2000*x2 + 4000*x3 <= 20000, \"budget_constraint\")\n\n    # Objective\n    m.setObjective(2000*x1 + 5000*x2 + 9000*x3, GRB.MAXIMIZE)\n\n    # Optimize model\n    m.optimize()\n\n    # Return maximum audience\n    return int(m.objVal)", "expert": "Programming Expert"}