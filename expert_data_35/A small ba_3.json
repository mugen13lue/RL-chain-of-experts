{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_216(crepe_cakes, sponge_cakes, birthday_cakes):\n    \"\"\"\n    Maximizes the profit of a small bakery by determining the number of each cake to make.\n\n    Args:\n        crepe_cakes: Integer, the number of crepe cakes to make.\n        sponge_cakes: Integer, the number of sponge cakes to make.\n        birthday_cakes: Integer, the number of birthday cakes to make.\n        \n    Returns:\n        profit: Float, the maximum profit achievable.\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"cake_production\")\n\n    # Decision variables\n    x1 = model.addVar(vtype=GRB.INTEGER, name=\"crepe_cakes\")\n    x2 = model.addVar(vtype=GRB.INTEGER, name=\"sponge_cakes\")\n    x3 = model.addVar(vtype=GRB.INTEGER, name=\"birthday_cakes\")\n\n    # Set objective\n    model.setObjective(12*x1 + 10*x2 + 15*x3, sense=GRB.MAXIMIZE)\n\n    # Add constraints\n    model.addConstr(400*x1 + 500*x2 + 450*x3 <= 20000, \"batter_constraint\")\n    model.addConstr(200*x1 + 300*x2 + 350*x3 <= 14000, \"milk_constraint\")\n\n    # Optimize model\n    model.optimize()\n\n    # Get the optimal solution\n    profit = model.objVal\n\n    return profit", "expert": "Programming Expert"}