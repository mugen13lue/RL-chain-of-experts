{"comment": "```python\nfrom gurobipy import *\n\ndef prob_231(throwing_games, climbing_games, constraint_1, constraint_2, constraint_3):\n    \"\"\"\n    Args:\n        throwing_games: an integer, representing the number of throwing games\n        climbing_games: an integer, representing the number of climbing games\n        constraint_1: an integer, representing the constraint value for \"twice_as_many_throwing_games_as_climbing_games\"\n        constraint_2: an integer, representing the constraint value for \"at_least_5_climbing_games\"\n        constraint_3: an integer, representing the constraint value for \"at_most_100_prizes_per_hour\"\n    \n    Returns:\n        total_number_of_customers_attracted_every_hour: an integer, representing the objective value\n    \"\"\"\n    m = Model(\"amusement_park\")\n\n    # Variables\n    x = m.addVar(vtype=GRB.INTEGER, name=\"throwing_games\")\n    y = m.addVar(vtype=GRB.INTEGER, name=\"climbing_games\")\n\n    # Constraints\n    m.addConstr(x >= constraint_1*y, \"twice_as_many_throwing_games_as_climbing_games\")\n    m.addConstr(y >= constraint_2, \"at_least_5_climbing_games\")\n    m.addConstr(2*x + 3*y <= constraint_3, \"at_most_100_prizes_per_hour\")\n\n    # Objective\n    m.setObjective(15*x + 8*y, GRB.MAXIMIZE)\n\n    # Solve the model\n    m.optimize()\n\n    total_number_of_customers_attracted_every_hour = m.objVal\n\n    return total_number_of_customers_attracted_every_hour\n```", "expert": "Programming Expert"}