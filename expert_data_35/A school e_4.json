{"comment": "```python\nimport gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_50(staff_teachers, substitute_teachers, requires_constraint, budget_constraint):\n    \"\"\"\n    Args:\n        staff_teachers: an integer, indicating the number of staff teachers\n        substitute_teachers: an integer, indicating the number of substitute teachers\n        requires_constraint: an integer, indicating the number of teaching availability required\n        budget_constraint: an integer, indicating the budget limit\n    Returns:\n        total_number_of_teachers: an integer, indicating the total number of teachers\n    \"\"\"\n    \n    # Create a new model\n    model = gp.Model(\"teacher_hiring\")\n    \n    # Define decision variables\n    x = model.addVar(lb=0, vtype=GRB.INTEGER, name=\"staff_teachers\")\n    y = model.addVar(lb=0, vtype=GRB.INTEGER, name=\"substitute_teachers\")\n    \n    # Set objective function: minimize total number of teachers\n    model.setObjective(x + y, sense=GRB.MINIMIZE)\n    \n    # Add constraints\n    model.addConstr(6*x + 3*y >= requires_constraint, \"teaching_hours_constraint\")\n    model.addConstr(300*x + 100*y <= budget_constraint, \"budget_constraint\")\n    \n    # Optimize model\n    model.optimize()\n    \n    # Get the total number of teachers\n    total_number_of_teachers = model.objVal\n    \n    return total_number_of_teachers\n```", "expert": "Modeling Knowledge Supplement Expert"}