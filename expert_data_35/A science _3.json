{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_122(cheap_box, expensive_box, constraint1, constraint2, constraint3):\n    \"\"\"\n    Solve a linear programming problem to maximize the amount of foam produced.\n\n    Args:\n        cheap_box: an integer, the number of cheap boxes to make\n        expensive_box: an integer, the number of expensive boxes to make\n        constraint1: a list of three integers [3, 5, 200], representing the metal constraint\n        constraint2: a list of three integers [5, 8, 300], representing the acid constraint\n        constraint3: a list of three integers [2, 3, 50], representing the heat constraint\n\n    Returns:\n        obj: an integer, the maximum amount of foam produced\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"foam_production\")\n\n    # Define decision variables\n    x = model.addVar(lb=0, vtype=GRB.INTEGER, name=\"cheap_boxes\")\n    y = model.addVar(lb=0, vtype=GRB.INTEGER, name=\"expensive_boxes\")\n\n    # Set objective function\n    model.setObjective(8*x + 10*y, sense=GRB.MAXIMIZE)\n\n    # Add constraints\n    model.addConstr(3*x + 5*y <= 200, \"metal_constraint\")\n    model.addConstr(5*x + 8*y <= 300, \"acid_constraint\")\n    model.addConstr(2*x + 3*y <= 50, \"heat_constraint\")\n\n    # Optimize model\n    model.optimize()\n\n    # Get the maximum amount of foam produced\n    obj = model.objVal\n\n    return obj", "expert": "Programming Expert"}