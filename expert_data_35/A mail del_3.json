{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_171(regular_boats, speed_boats, regular_boat_capacity, regular_boat_gas,\n              speed_boat_capacity, speed_boat_gas, max_regular_boat_trips,\n              min_speed_boat_trips_percentage, mail_to_be_delivered): \n    \"\"\"\n    Args:\n        regular_boats: an integer, number of regular boats\n        speed_boats: an integer, number of speed boats\n        regular_boat_capacity: an integer, number of mail pieces a regular boat can carry per trip\n        regular_boat_gas: an integer, amount of gas (in liters) a regular boat uses per trip\n        speed_boat_capacity: an integer, number of mail pieces a speed boat can carry per trip\n        speed_boat_gas: an integer, amount of gas (in liters) a speed boat uses per trip\n        max_regular_boat_trips: an integer, maximum number of trips a regular boat can make\n        min_speed_boat_trips_percentage: a float, minimum percentage of trips that must be made by speed boats\n        mail_to_be_delivered: an integer, number of mail pieces to be delivered\n    \n    Returns:\n        objective_value: an integer, the minimum amount of gas consumed\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"mail_delivery\")\n\n    # Define decision variables\n    x = model.addVar(lb=0, vtype=GRB.INTEGER, name=\"regular_boat_trips\")\n    y = model.addVar(lb=0, vtype=GRB.INTEGER, name=\"speed_boat_trips\")\n\n    # Set objective function\n    model.setObjective(regular_boat_gas*x + speed_boat_gas*y, sense=GRB.MINIMIZE)\n\n    # Add constraints\n    model.addConstr(x + y <= max_regular_boat_trips, \"max_regular_trips\")\n    model.addConstr(y >= 0.5*(x + y), \"min_speed_trips_percentage\")\n    model.addConstr(regular_boat_capacity*x + speed_boat_capacity*y >= mail_to_be_delivered, \"mail_delivery\")\n\n    # Optimize model\n    model.optimize()\n\n    # Get the objective value\n    objective_value = model.objVal\n\n    return objective_value", "expert": "Programming Expert"}