{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_214(basketball_tournament, horse_race, soccer_game, limit_1, limit_2):\n    \"\"\"\n    Args:\n        basketball_tournament: an integer, representing the amount of money to put on basketball tournament.\n        horse_race: an integer, representing the amount of money to put on horse race.\n        soccer_game: an integer, representing the amount of money to put on soccer game.\n        limit_1: an integer, representing the limit for the sum of all bets.\n        limit_2: a float, representing the limit for the average chance of losing money.\n\n    Returns:\n        obj: a float, representing the maximum average payout.\n    \"\"\"\n    m = gp.Model(\"gambling\")\n\n    # Variables\n    x1 = m.addVar(lb=0, vtype=GRB.CONTINUOUS, name=\"basketball_tournament\")\n    x2 = m.addVar(lb=0, vtype=GRB.CONTINUOUS, name=\"horse_race\")\n    x3 = m.addVar(lb=0, vtype=GRB.CONTINUOUS, name=\"soccer_game\")\n\n    # Constraints\n    m.addConstr(x1 + x2 + x3 == 100000, \"total_budget\")\n    m.addConstr(0.5*x1 + 0.25*x2 + 0.1*x3 <= 0.3 * 100000, \"average_loss_limit\")\n\n    # Objective\n    m.setObjective(1.2*x1 + 0.5*x2 + 0.1*x3, sense=GRB.MAXIMIZE)\n\n    # Optimize model\n    m.optimize()\n\n    # Retrieve the optimal objective value\n    obj = m.objVal\n\n    return obj", "expert": "Programming Expert"}