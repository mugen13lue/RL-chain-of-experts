{"comment": "import gurobipy as gp\nfrom gurobipy import GRB\n\ndef prob_75(traditional_machine, modern_machine):\n    \"\"\"\n    Args:\n        traditional_machine: an integer, represents the number of acres to be used for traditional machine\n        modern_machine: an integer, represents the number of acres to be used for modern machine\n    Returns:\n        obj: an integer, represents the maximum amount of tea leaves that can be picked\n    \"\"\"\n    # Create a new model\n    model = gp.Model(\"Tea Leaves Picking\")\n\n    # Define decision variables\n    x = model.addVar(lb=0, vtype=GRB.CONTINUOUS, name=\"traditional_machine_acres\")\n    y = model.addVar(lb=0, vtype=GRB.CONTINUOUS, name=\"modern_machine_acres\")\n\n    # Set objective function\n    model.setObjective(30*x + 40*y, sense=GRB.MAXIMIZE)\n\n    # Add constraints\n    model.addConstr(30*x + 40*y <= 500, \"tea_leaves_picked\")\n    model.addConstr(10*x + 15*y <= 6000, \"waste_produced\")\n    model.addConstr(20*x + 15*y <= 9000, \"fuel_usage\")\n\n    # Optimize model\n    model.optimize()\n\n    # Get the optimal objective value\n    obj = model.objVal\n\n    return obj", "expert": "Programming Expert"}